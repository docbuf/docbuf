# Sublime Syntax Definition

name: DocBuf
file_extensions: [docbuf, dbuf, docb, doc, db]
scope: source.docbuf

contexts:
  main:
    - include: pragma
    - include: comments
    - include: options
    - include: option-fields
    - include: declarations
    - include: field-declarations

  pragma:
    # Match `pragma docbuf v1;` and `docbuf v1.0;` declarations
    - match: '\bpragma\b\s+\bdocbuf\b\s+\b\w+\b\s*;'
      scope: support.docbuf
  
  declarations:
    # Match "Document name {}" and "Process name {}" declarations
    - match: '\b(Document|Process)\b\s+\b\w+\b\s*{'
      scope: entity.name.docbuf
    # Complete the declaration with a closing brace
    - match: '}'
      scope: entity.name.docbuf

  field-declarations:
    # Match `field: type,` syntax
    - match: '\b\w+\b\s*:\s*\b\w+\b\s*,'
      scope: keyword.declaration.docbuf
    # Match `field: [type],` syntax
    - match: '\b\w+\b\s*:\s*\[\b\w+\b\]\s*,'
      scope: keyword.declaration.docbuf
    # Match `field: [type] -> (),` syntax
    - match: '\b\w+\b\s*:\s*\[\b\w+\b\]\s*->\s*\(\)\s*,'
      scope: keyword.declaration.docbuf
    # Match `field: type -> (),` syntax
    - match: '\b\w+\b\s*:\s*\b\w+\b\s*->\s*\(\)\s*,'
      scope: keyword.declaration.docbuf

  options:
    - match: '#\[\bimports\b {'
      scope: variable.parameter.option.docbuf
    - match: '#\[\b(process|field|endpoint|document)::options\b {'
      scope: variable.parameter.option.docbuf
    - match: '}]'
      scope: variable.parameter.option.docbuf

  option-fields:
    # match fields that are `name = value;` syntax
    - match: '\b\w+\b\s*=\s*\b\w+\b\s*;'
      scope: variable.parameter.option.docbuf
    # Search for fields that are `name = "value";` syntax
    - match: '\b\w+\b\s*=\s*".*"\s*;'
      scope: variable.parameter.option.docbuf
      # push:
      #   - meta_scope: variable.other.option.docbuf
      #   - match: ';'
      #     scope: punctuation.terminator.docbuf
      #     pop: true
      #   - include: main

  comments:
    - match: '\/\*'
      scope: punctuation.definition.comment.docbuf
      push:
        - meta_scope: comment.block.docbuf
        - match: '\*\/'
          scope: punctuation.definition.comment.docbuf
          pop: true
        - include: comments
    - match: '\/\/'
      scope: punctuation.definition.comment.docbuf
      push:
        - meta_scope: comment.line.docbuf
        - match: '$'
          pop: true
        - include: comments
    
    